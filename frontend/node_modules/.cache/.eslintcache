[{"/Users/hm150601/Documents/GitHub/Shop-Online-Project/frontend/src/index.js":"1","/Users/hm150601/Documents/GitHub/Shop-Online-Project/frontend/src/App.js":"2","/Users/hm150601/Documents/GitHub/Shop-Online-Project/frontend/src/store.js":"3","/Users/hm150601/Documents/GitHub/Shop-Online-Project/frontend/src/components/Footer.js":"4","/Users/hm150601/Documents/GitHub/Shop-Online-Project/frontend/src/components/ProtectedRoute.js":"5","/Users/hm150601/Documents/GitHub/Shop-Online-Project/frontend/src/screens/HomeScreen.js":"6","/Users/hm150601/Documents/GitHub/Shop-Online-Project/frontend/src/components/Header.js":"7","/Users/hm150601/Documents/GitHub/Shop-Online-Project/frontend/src/components/OnlyAdmin.js":"8","/Users/hm150601/Documents/GitHub/Shop-Online-Project/frontend/src/screens/CartScreen.js":"9","/Users/hm150601/Documents/GitHub/Shop-Online-Project/frontend/src/screens/ProductScreen.js":"10","/Users/hm150601/Documents/GitHub/Shop-Online-Project/frontend/src/screens/LoginScreen.js":"11","/Users/hm150601/Documents/GitHub/Shop-Online-Project/frontend/src/screens/RegisterScreen.js":"12","/Users/hm150601/Documents/GitHub/Shop-Online-Project/frontend/src/screens/ProfileScreen.js":"13","/Users/hm150601/Documents/GitHub/Shop-Online-Project/frontend/src/screens/ShippingScreen.js":"14","/Users/hm150601/Documents/GitHub/Shop-Online-Project/frontend/src/screens/UserListScreen.js":"15","/Users/hm150601/Documents/GitHub/Shop-Online-Project/frontend/src/screens/PlaceOrderScreen.js":"16","/Users/hm150601/Documents/GitHub/Shop-Online-Project/frontend/src/screens/PaymentScreen.js":"17","/Users/hm150601/Documents/GitHub/Shop-Online-Project/frontend/src/screens/OrderScreen.js":"18","/Users/hm150601/Documents/GitHub/Shop-Online-Project/frontend/src/screens/ProductListScreen.js":"19","/Users/hm150601/Documents/GitHub/Shop-Online-Project/frontend/src/screens/UserEditScreen.js":"20","/Users/hm150601/Documents/GitHub/Shop-Online-Project/frontend/src/screens/OrderListScreen.js":"21","/Users/hm150601/Documents/GitHub/Shop-Online-Project/frontend/src/screens/CreateProductScreen.js":"22","/Users/hm150601/Documents/GitHub/Shop-Online-Project/frontend/src/screens/EditProductScreen.js":"23","/Users/hm150601/Documents/GitHub/Shop-Online-Project/frontend/src/redux/reducers/productReducers.js":"24","/Users/hm150601/Documents/GitHub/Shop-Online-Project/frontend/src/redux/reducers/orderReducers.js":"25","/Users/hm150601/Documents/GitHub/Shop-Online-Project/frontend/src/redux/reducers/cartReducers.js":"26","/Users/hm150601/Documents/GitHub/Shop-Online-Project/frontend/src/redux/reducers/userReducers.js":"27","/Users/hm150601/Documents/GitHub/Shop-Online-Project/frontend/src/products.js":"28","/Users/hm150601/Documents/GitHub/Shop-Online-Project/frontend/src/components/ProductCarousel.js":"29","/Users/hm150601/Documents/GitHub/Shop-Online-Project/frontend/src/components/Message.js":"30","/Users/hm150601/Documents/GitHub/Shop-Online-Project/frontend/src/components/Product.js":"31","/Users/hm150601/Documents/GitHub/Shop-Online-Project/frontend/src/components/Meta.js":"32","/Users/hm150601/Documents/GitHub/Shop-Online-Project/frontend/src/components/SearchBox.js":"33","/Users/hm150601/Documents/GitHub/Shop-Online-Project/frontend/src/components/Rating.js":"34","/Users/hm150601/Documents/GitHub/Shop-Online-Project/frontend/src/components/FormContainer.js":"35","/Users/hm150601/Documents/GitHub/Shop-Online-Project/frontend/src/components/Paginate.js":"36","/Users/hm150601/Documents/GitHub/Shop-Online-Project/frontend/src/components/CheckoutSteps.js":"37","/Users/hm150601/Documents/GitHub/Shop-Online-Project/frontend/src/components/Loading.js":"38","/Users/hm150601/Documents/GitHub/Shop-Online-Project/frontend/src/redux/actions/cartActions.js":"39","/Users/hm150601/Documents/GitHub/Shop-Online-Project/frontend/src/redux/actions/userActions.js":"40","/Users/hm150601/Documents/GitHub/Shop-Online-Project/frontend/src/redux/actions/productActions.js":"41","/Users/hm150601/Documents/GitHub/Shop-Online-Project/frontend/src/redux/actions/orderActions.js":"42","/Users/hm150601/Documents/GitHub/Shop-Online-Project/frontend/src/redux/constants/orderConstants.js":"43","/Users/hm150601/Documents/GitHub/Shop-Online-Project/frontend/src/redux/constants/cartConstants.js":"44","/Users/hm150601/Documents/GitHub/Shop-Online-Project/frontend/src/redux/constants/productConstants.js":"45","/Users/hm150601/Documents/GitHub/Shop-Online-Project/frontend/src/redux/constants/userConstants.js":"46"},{"size":365,"mtime":1668260911646,"results":"47","hashOfConfig":"48"},{"size":4115,"mtime":1668260911635,"results":"49","hashOfConfig":"48"},{"size":2445,"mtime":1668260911660,"results":"50","hashOfConfig":"48"},{"size":350,"mtime":1668260911641,"results":"51","hashOfConfig":"48"},{"size":318,"mtime":1668260911645,"results":"52","hashOfConfig":"48"},{"size":1551,"mtime":1668311673015,"results":"53","hashOfConfig":"48"},{"size":2228,"mtime":1668260911642,"results":"54","hashOfConfig":"48"},{"size":328,"mtime":1668260911644,"results":"55","hashOfConfig":"48"},{"size":4097,"mtime":1668260911652,"results":"56","hashOfConfig":"48"},{"size":7695,"mtime":1668260911656,"results":"57","hashOfConfig":"48"},{"size":2373,"mtime":1668260911653,"results":"58","hashOfConfig":"48"},{"size":3325,"mtime":1668260911659,"results":"59","hashOfConfig":"48"},{"size":5211,"mtime":1668260911657,"results":"60","hashOfConfig":"48"},{"size":2588,"mtime":1668260911660,"results":"61","hashOfConfig":"48"},{"size":2941,"mtime":1668260911660,"results":"62","hashOfConfig":"48"},{"size":4951,"mtime":1668260911655,"results":"63","hashOfConfig":"48"},{"size":1930,"mtime":1668260911655,"results":"64","hashOfConfig":"48"},{"size":8117,"mtime":1668260911654,"results":"65","hashOfConfig":"48"},{"size":3489,"mtime":1668260911655,"results":"66","hashOfConfig":"48"},{"size":2998,"mtime":1668260911660,"results":"67","hashOfConfig":"48"},{"size":2764,"mtime":1668260911654,"results":"68","hashOfConfig":"48"},{"size":4641,"mtime":1668311332730,"results":"69","hashOfConfig":"48"},{"size":5459,"mtime":1668260911653,"results":"70","hashOfConfig":"48"},{"size":3946,"mtime":1668260911651,"results":"71","hashOfConfig":"48"},{"size":3294,"mtime":1668260911651,"results":"72","hashOfConfig":"48"},{"size":1106,"mtime":1668260911650,"results":"73","hashOfConfig":"48"},{"size":4280,"mtime":1668260911651,"results":"74","hashOfConfig":"48"},{"size":2503,"mtime":1668312846953,"results":"75","hashOfConfig":"48"},{"size":1185,"mtime":1668260911645,"results":"76","hashOfConfig":"48"},{"size":196,"mtime":1668260911644,"results":"77","hashOfConfig":"48"},{"size":805,"mtime":1668260911645,"results":"78","hashOfConfig":"48"},{"size":515,"mtime":1668260911644,"results":"79","hashOfConfig":"48"},{"size":831,"mtime":1668260911646,"results":"80","hashOfConfig":"48"},{"size":1261,"mtime":1668260911646,"results":"81","hashOfConfig":"48"},{"size":336,"mtime":1668260911642,"results":"82","hashOfConfig":"48"},{"size":748,"mtime":1668260911644,"results":"83","hashOfConfig":"48"},{"size":1246,"mtime":1668260911640,"results":"84","hashOfConfig":"48"},{"size":271,"mtime":1668260911643,"results":"85","hashOfConfig":"48"},{"size":1177,"mtime":1668260911648,"results":"86","hashOfConfig":"48"},{"size":6122,"mtime":1668260911649,"results":"87","hashOfConfig":"48"},{"size":5168,"mtime":1668260911648,"results":"88","hashOfConfig":"48"},{"size":5119,"mtime":1668260911648,"results":"89","hashOfConfig":"48"},{"size":1169,"mtime":1668260911649,"results":"90","hashOfConfig":"48"},{"size":238,"mtime":1668260911649,"results":"91","hashOfConfig":"48"},{"size":1522,"mtime":1668260911650,"results":"92","hashOfConfig":"48"},{"size":1509,"mtime":1668260911650,"results":"93","hashOfConfig":"48"},{"filePath":"94","messages":"95","suppressedMessages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1df4wzm",{"filePath":"97","messages":"98","suppressedMessages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","suppressedMessages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","suppressedMessages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","suppressedMessages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"109","messages":"110","suppressedMessages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112"},{"filePath":"113","messages":"114","suppressedMessages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","suppressedMessages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"119","messages":"120","suppressedMessages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"122","messages":"123","suppressedMessages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125"},{"filePath":"126","messages":"127","suppressedMessages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129"},{"filePath":"130","messages":"131","suppressedMessages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"133","messages":"134","suppressedMessages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"136","messages":"137","suppressedMessages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"139","messages":"140","suppressedMessages":"141","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"142","messages":"143","suppressedMessages":"144","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"145","messages":"146","suppressedMessages":"147","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"148","messages":"149","suppressedMessages":"150","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151"},{"filePath":"152","messages":"153","suppressedMessages":"154","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"155","messages":"156","suppressedMessages":"157","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158"},{"filePath":"159","messages":"160","suppressedMessages":"161","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"162","messages":"163","suppressedMessages":"164","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165"},{"filePath":"166","messages":"167","suppressedMessages":"168","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169"},{"filePath":"170","messages":"171","suppressedMessages":"172","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"173","messages":"174","suppressedMessages":"175","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"176","messages":"177","suppressedMessages":"178","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"179","messages":"180","suppressedMessages":"181","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"182","messages":"183","suppressedMessages":"184","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"185","messages":"186","suppressedMessages":"187","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"188","messages":"189","suppressedMessages":"190","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"191","messages":"192","suppressedMessages":"193","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"194","messages":"195","suppressedMessages":"196","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"197","messages":"198","suppressedMessages":"199","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"200","messages":"201","suppressedMessages":"202","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"203","messages":"204","suppressedMessages":"205","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"206","messages":"207","suppressedMessages":"208","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"209","messages":"210","suppressedMessages":"211","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"212","messages":"213","suppressedMessages":"214","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"215","messages":"216","suppressedMessages":"217","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"218","messages":"219","suppressedMessages":"220","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"221","messages":"222","suppressedMessages":"223","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"224","messages":"225","suppressedMessages":"226","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"227","messages":"228","suppressedMessages":"229","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"230","messages":"231","suppressedMessages":"232","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"233","messages":"234","suppressedMessages":"235","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"236","messages":"237","suppressedMessages":"238","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/hm150601/Documents/GitHub/Shop-Online-Project/frontend/src/index.js",[],[],"/Users/hm150601/Documents/GitHub/Shop-Online-Project/frontend/src/App.js",[],[],"/Users/hm150601/Documents/GitHub/Shop-Online-Project/frontend/src/store.js",[],[],"/Users/hm150601/Documents/GitHub/Shop-Online-Project/frontend/src/components/Footer.js",[],[],"/Users/hm150601/Documents/GitHub/Shop-Online-Project/frontend/src/components/ProtectedRoute.js",[],[],"/Users/hm150601/Documents/GitHub/Shop-Online-Project/frontend/src/screens/HomeScreen.js",["239"],[],"import React, { useEffect } from \"react\";\nimport { listProduct } from \"../redux/actions/productActions\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useParams } from \"react-router-dom\";\nimport Product from \"../components/Product\";\nimport { Row, Col } from \"react-bootstrap\";\nimport Loading from \"../components/Loading\";\nimport Message from \"../components/Message\";\nimport Meta from \"../components/Meta\";\nimport Paginate from \"../components/Paginate\";\nimport ProductCarousel from \"../components/ProductCarousel\";\n\nconst HomeScreen = () => {\n  let params = useParams();\n  const keyword = params.keyword;\n  const pageNumber = params.pageNumber || 1;\n  const dispatch = useDispatch();\n\n  const productList = useSelector((state) => state.productList);\n\n  const { products, loading, error, page, pages } = productList;\n\n  useEffect(() => {\n    dispatch(listProduct(keyword, pageNumber));\n  }, [dispatch, keyword, pageNumber]);\n\n  return (\n    <>\n      <Meta title=\"Clothshop | Home\" />\n      {/* {!keyword && <ProductCarousel />} */}\n      <h3>Latest Products</h3>\n      <Row>\n        {loading ? (\n          <Loading />\n        ) : error ? (\n          <Message variant=\"danger\">{error}</Message>\n        ) : (\n          products.map((product, index) => (\n            <Col sm={12} md={6} lg={4} xl={3}>\n              <Product product={product} key={index} />\n            </Col>\n          ))\n        )}\n      </Row>\n      <Paginate page={page} pages={pages} keyword={keyword ? keyword : \"\"} />\n    </>\n  );\n};\n\nexport default HomeScreen;\n","/Users/hm150601/Documents/GitHub/Shop-Online-Project/frontend/src/components/Header.js",[],[],"/Users/hm150601/Documents/GitHub/Shop-Online-Project/frontend/src/components/OnlyAdmin.js",[],[],"/Users/hm150601/Documents/GitHub/Shop-Online-Project/frontend/src/screens/CartScreen.js",[],[],"/Users/hm150601/Documents/GitHub/Shop-Online-Project/frontend/src/screens/ProductScreen.js",["240","241"],[],"import React, { useState, useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useParams, Link, useNavigate } from \"react-router-dom\";\nimport {\n  Row,\n  Col,\n  Image,\n  ListGroup,\n  Button,\n  Card,\n  FormControl,\n  Form,\n} from \"react-bootstrap\";\nimport { listProductDetails } from \"../redux/actions/productActions\";\nimport Loading from \"../components/Loading\";\nimport Message from \"../components/Message\";\nimport products from \"../products\";\nimport Rating from \"../components/Rating\";\nimport { addToCart } from \"../redux/actions/cartActions\";\nimport { createProductReview } from \"../redux/actions/productActions\";\n\nconst ProductScreen = () => {\n  const [qty, setQty] = useState(1);\n  const [rating, setRating] = useState(0);\n  const [comment, setComment] = useState(\"\");\n  let navigate = useNavigate();\n  const dispatch = useDispatch();\n  let params = useParams();\n\n  const productDetails = useSelector((state) => state.productDetails);\n  const { product, loading, error } = productDetails;\n\n  const userLogin = useSelector((state) => state.userLogin);\n  const { userInfo } = userLogin;\n\n  const productReviewCreate = useSelector((state) => state.productReviewCreate);\n  const {\n    loading: loadingProductReview,\n    success: successProductReview,\n    error: errorProductReview,\n  } = productReviewCreate;\n\n  useEffect(() => {\n    if (successProductReview) {\n      setRating(0);\n      setComment(\"\");\n    }\n    if (error) {\n      navigate(\"/\");\n    }\n    dispatch(listProductDetails(params.id));\n  }, [dispatch, params.id, successProductReview]);\n\n  const addToCartHandler = () => {\n    dispatch(addToCart(params.id, qty));\n    navigate(`/cart`);\n  };\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    dispatch(createProductReview(params.id, { rating, comment }));\n  };\n\n  return (\n    <>\n      {loading ? (\n        <Loading />\n      ) : error ? (\n        <Message variant=\"danger\"></Message>\n      ) : (\n        product && (\n          <>\n            <Link className=\"btn btn-light my-3\" to=\"/\">\n              Go back\n            </Link>\n            <Row>\n              <Col md={4}>\n                <Image src={product.image} alt={product.name} fluid />\n              </Col>\n              <Col md={5}>\n                <h3>{product.name}</h3>\n                <ListGroup variant=\"flush\">\n                  <ListGroup.Item>\n                    <Rating\n                      value={product.rating}\n                      text={`${product.rating} Reviews`}\n                    />\n                  </ListGroup.Item>\n                  <ListGroup.Item>Price: ${product.price}</ListGroup.Item>\n                  <ListGroup.Item>\n                    Description: {product.description}\n                  </ListGroup.Item>\n                </ListGroup>\n              </Col>\n              <Col md={3}>\n                <Card>\n                  <ListGroup variant=\"flush\">\n                    <ListGroup.Item>\n                      <Row>\n                        <Col>Price:</Col>\n                        <Col>\n                          <strong>${product.price}</strong>\n                        </Col>\n                      </Row>\n                    </ListGroup.Item>\n                    <ListGroup.Item>\n                      <Row>\n                        <Col>Status:</Col>\n                        <Col>\n                          {product.countInStock > 0\n                            ? `In stock`\n                            : `Out of stock`}\n                        </Col>\n                      </Row>\n                    </ListGroup.Item>\n                    {product.countInStock > 0 && (\n                      <ListGroup.Item>\n                        <Row>\n                          <Col>Qty</Col>\n                          <Col>\n                            <FormControl\n                              as=\"select\"\n                              value={qty}\n                              onChange={(e) => setQty(e.target.value)}\n                            >\n                              {[...Array(product.countInStock).keys()].map(\n                                (x) => (\n                                  <option value={x + 1} key={x + 1}>\n                                    {x + 1}\n                                  </option>\n                                )\n                              )}\n                            </FormControl>\n                          </Col>\n                        </Row>\n                      </ListGroup.Item>\n                    )}\n                    <ListGroup.Item>\n                      <Button\n                        onClick={addToCartHandler}\n                        className=\"btn btn-primary d-block w-100\"\n                        type=\"button\"\n                        disabled={product.countInStock === 0}\n                      >\n                        Add to cart\n                      </Button>\n                    </ListGroup.Item>\n                  </ListGroup>\n                </Card>\n              </Col>\n            </Row>\n            <Row className=\"mt-4\">\n              <Col md={6}>\n                <h2>Reviews</h2>\n                {loadingProductReview && <Loading />}\n                {product.reviews.length === 0 && (\n                  <Message variant=\"info\">No Reviews</Message>\n                )}\n                <ListGroup variant=\"flush\">\n                  {product.reviews.map((review) => (\n                    <ListGroup.Item key={review._id}>\n                      <strong>{review.name}</strong>\n                      <Rating value={review.rating} text=\"Reviews\" />\n                      <p>{review.createdAt.substring(0, 10)}</p>\n                      <p>{review.comment}</p>\n                    </ListGroup.Item>\n                  ))}\n                </ListGroup>\n                <h3>Write a customer review</h3>\n                {userInfo ? (\n                  <Form onSubmit={submitHandler}>\n                    {errorProductReview && (\n                      <Message variant=\"danger\">{errorProductReview}</Message>\n                    )}\n\n                    <Form.Group controlId=\"rating\">\n                      <Form.Label>Rating</Form.Label>\n                      <Form.Control\n                        as=\"select\"\n                        value={rating}\n                        onChange={(e) => setRating(e.target.value)}\n                      >\n                        <option value=\"\">Select ...</option>\n                        <option value=\"1\">1 - Poor</option>\n                        <option value=\"2\">2 - Fair</option>\n                        <option value=\"3\">3 - Good</option>\n                        <option value=\"4\">4 - Very good</option>\n                        <option value=\"5\">5 - Perfect</option>\n                      </Form.Control>\n                    </Form.Group>\n                    <Form.Group className=\"mt-3\" controlId=\"comment\">\n                      <Form.Label>Comment</Form.Label>\n                      <Form.Control\n                        as=\"textarea\"\n                        value={comment}\n                        onChange={(e) => setComment(e.target.value)}\n                        placeholder=\"Comment\"\n                      ></Form.Control>\n                    </Form.Group>\n                    <Button type=\"submit\" className=\"mt-3\" vatiant=\"primary\">\n                      Submit\n                    </Button>\n                  </Form>\n                ) : (\n                  <Message variant=\"info\">\n                    <Link to=\"/login\">Sign in</Link> to write a review\n                  </Message>\n                )}\n              </Col>\n            </Row>\n          </>\n        )\n      )}\n    </>\n  );\n};\n\nexport default ProductScreen;\n","/Users/hm150601/Documents/GitHub/Shop-Online-Project/frontend/src/screens/LoginScreen.js",["242"],[],"import React, { useState, useEffect } from \"react\";\nimport { Link, useNavigate, useLocation } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Form, Button, Row, Col } from \"react-bootstrap\";\nimport FormContainer from \"../components/FormContainer\";\nimport { login } from \"../redux/actions/userActions\";\nimport Loading from \"../components/Loading\";\nimport Message from \"../components/Message\";\nimport Meta from \"../components/Meta\";\n\nconst LoginScreen = () => {\n  let navigate = useNavigate();\n  const dispatch = useDispatch();\n  let location = useLocation();\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const userLogin = useSelector((state) => state.userLogin);\n  const { loading, userInfo, error } = userLogin;\n\n  const redirect = location.search ? location.search.split(\"=\")[1] : \"\";\n\n  useEffect(() => {\n    if (userInfo) {\n      navigate(`/${redirect}`);\n    }\n  }, [dispatch, navigate, userInfo]);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (email !== \"\" && password !== \"\") dispatch(login(email, password));\n  };\n\n  return (\n    <>\n      <Meta title=\"Clothshop | Login\" />\n      <FormContainer>\n        <h2>Sign In</h2>\n        <Form onSubmit={handleSubmit}>\n          {error && <Message variant=\"danger\">{error}</Message>}\n          <Form.Group controlId=\"email\" className=\"mt-3\">\n            <Form.Label>Email</Form.Label>\n            <Form.Control\n              type=\"email\"\n              placeholder=\"Email\"\n              value={email}\n              onChange={(e) => setEmail(e.target.value)}\n            ></Form.Control>\n          </Form.Group>\n          <Form.Group controlId=\"password\" className=\"mt-3\">\n            <Form.Label>Password</Form.Label>\n            <Form.Control\n              type=\"password\"\n              placeholder=\"Password\"\n              value={password}\n              onChange={(e) => setPassword(e.target.value)}\n            ></Form.Control>\n          </Form.Group>\n          <Button className=\"mt-3\" type=\"submit\" variant=\"primary\">\n            {loading ? <Loading /> : `Sign In`}\n          </Button>\n        </Form>\n        <Row className=\"py-3\">\n          <Col>\n            New Customer? <Link to=\"/register\">Register</Link>\n          </Col>\n        </Row>\n      </FormContainer>\n    </>\n  );\n};\n\nexport default LoginScreen;\n","/Users/hm150601/Documents/GitHub/Shop-Online-Project/frontend/src/screens/RegisterScreen.js",[],[],"/Users/hm150601/Documents/GitHub/Shop-Online-Project/frontend/src/screens/ProfileScreen.js",[],[],"/Users/hm150601/Documents/GitHub/Shop-Online-Project/frontend/src/screens/ShippingScreen.js",[],[],"/Users/hm150601/Documents/GitHub/Shop-Online-Project/frontend/src/screens/UserListScreen.js",[],[],"/Users/hm150601/Documents/GitHub/Shop-Online-Project/frontend/src/screens/PlaceOrderScreen.js",[],[],"/Users/hm150601/Documents/GitHub/Shop-Online-Project/frontend/src/screens/PaymentScreen.js",[],[],"/Users/hm150601/Documents/GitHub/Shop-Online-Project/frontend/src/screens/OrderScreen.js",["243","244"],[],"import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { PayPalButton } from \"react-paypal-button-v2\";\nimport { Link, useNavigate, useParams } from \"react-router-dom\";\nimport { Row, Col, ListGroup, Image, Card, Button } from \"react-bootstrap\";\nimport Loading from \"../components/Loading\";\nimport Message from \"../components/Message\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport CheckoutSteps from \"../components/CheckoutSteps\";\nimport {\n  getOrderDetails,\n  payOrder,\n  deliverOrder,\n} from \"../redux/actions/orderActions\";\n\nconst OrderScreen = () => {\n  let params = useParams();\n  let navigate = useNavigate();\n  const dispatch = useDispatch();\n\n  const [sdkReady, setSdkReady] = useState(false);\n\n  const { order, loading, error } = useSelector((state) => state.orderDetails);\n\n  const userLogin = useSelector((state) => state.userLogin);\n  const { userInfo } = userLogin;\n\n  const { loading: loadingPay, success: successPay } = useSelector(\n    (state) => state.orderPay\n  );\n\n  const {\n    loading: loadingDeliverd,\n    error: errorDeliverd,\n    success: successDeliverd,\n  } = useSelector((state) => state.orderDeliver);\n\n  if (!loading) {\n    const addDecimals = (num) => {\n      return (Math.round(num * 100) / 100).toFixed(2);\n    };\n\n    order.itemsPrice = addDecimals(\n      order.orderItems.reduce((acc, item) => acc + item.price * item.qty, 0)\n    );\n  }\n\n  useEffect(() => {\n    const addPaypalScript = async () => {\n      const { data: clientId } = await axios.get(\"/api/config/paypal\");\n      const script = document.createElement(\"script\");\n      script.type = \"text/javascript\";\n      script.src = `https://www.paypal.com/sdk/js?client-id=${clientId}`;\n      script.async = true;\n      script.onload = () => {\n        setSdkReady(true);\n      };\n      document.body.appendChild(script);\n    };\n    if (!order || successPay) {\n      dispatch(getOrderDetails(params.id));\n    } else if (!order.isPaid) {\n      if (!window.paypal) {\n        addPaypalScript();\n      } else {\n        setSdkReady(true);\n      }\n    }\n    dispatch(getOrderDetails(params.id));\n  }, [dispatch, successPay, params.id, successDeliverd]);\n\n  const successPaymentHandler = (paymentResult) => {\n    dispatch(payOrder(params.id, paymentResult));\n  };\n\n  const deliverHandler = () => {\n    dispatch(deliverOrder(params.id));\n  };\n\n  return (\n    <>\n      <CheckoutSteps step1 step2 step3 step4 />\n      {loading ? (\n        <Loading />\n      ) : error ? (\n        <Message variant=\"danger\">{error}</Message>\n      ) : (\n        <>\n          <h1>Order #{order._id}</h1>\n          <Row>\n            <Col md={8}>\n              <ListGroup variant=\"flush\">\n                <ListGroup.Item>\n                  <h4>Shipping</h4>\n                  <p>\n                    <strong>Name: </strong>\n                    {order.user.name}\n                    <br />\n                    <strong>Email: </strong>\n                    <a href={`mailto:${order.user.email}`}>\n                      {order.user.email}\n                    </a>\n                  </p>\n                  <strong>Address:</strong>\n                  <p>\n                    {order.shippingAddress.address},{\" \"}\n                    {order.shippingAddress.city}{\" \"}\n                    {order.shippingAddress.postalCode},{\" \"}\n                    {order.shippingAddress.country}\n                  </p>\n                  {order.isDelivered ? (\n                    <Message variant=\"success\">\n                      Delivered on {order.deliveredAt.substring(0, 10)}\n                    </Message>\n                  ) : (\n                    <Message variant=\"danger\">Not Delivered</Message>\n                  )}\n                </ListGroup.Item>\n                <ListGroup.Item>\n                  <h4>Payment Method</h4>\n                  <p>\n                    <strong>Method : </strong>\n                    {order.paymentMethod}\n                  </p>\n                  {order.isPaid ? (\n                    <Message variant=\"success\">Paid on {order.paidAt}</Message>\n                  ) : (\n                    <Message variant=\"danger\">Not Paid</Message>\n                  )}\n                </ListGroup.Item>\n                <ListGroup.Item>\n                  <h4>Order Items</h4>\n                  {order.orderItems.length === 0 ? (\n                    <Message variant=\"info\">Your cart is empty</Message>\n                  ) : (\n                    <>\n                      {order.orderItems.map((item, index) => (\n                        <ListGroup.Item key={index}>\n                          <Row>\n                            <Col md={1}>\n                              <Image\n                                src={item.image}\n                                alt={item.name}\n                                fluid\n                                rounded\n                              />\n                            </Col>\n                            <Col>\n                              <Link to={`/product/${item.product}`}>\n                                {item.name}\n                              </Link>\n                            </Col>\n                            <Col md={4}>\n                              {item.qty} x ${item.price} = $\n                              {item.qty * item.price}\n                            </Col>\n                          </Row>\n                        </ListGroup.Item>\n                      ))}\n                    </>\n                  )}\n                </ListGroup.Item>\n              </ListGroup>\n            </Col>\n            <Col md={4}>\n              <Card>\n                <ListGroup variant=\"flush\">\n                  <ListGroup.Item>\n                    <h4>Order Summary</h4>\n                  </ListGroup.Item>\n                  <ListGroup.Item>\n                    <Row>\n                      <Col>Items</Col>\n                      <Col>${order.itemsPrice}</Col>\n                    </Row>\n                  </ListGroup.Item>\n                  <ListGroup.Item>\n                    <Row>\n                      <Col>Shipping</Col>\n                      <Col>${order.shippingPrice}</Col>\n                    </Row>\n                  </ListGroup.Item>\n                  <ListGroup.Item>\n                    <Row>\n                      <Col>Tax</Col>\n                      <Col>${order.taxPrice}</Col>\n                    </Row>\n                  </ListGroup.Item>\n                  <ListGroup.Item>\n                    <Row>\n                      <Col>Total</Col>\n                      <Col>${order.totalPrice}</Col>\n                    </Row>\n                    <ListGroup.Item>\n                      {!order.isPaid && (\n                        <ListGroup.Item>\n                          {loadingPay && <Loading />}\n                          {!sdkReady ? (\n                            <Loading />\n                          ) : (\n                            <PayPalButton\n                              amount={order.totalPrice}\n                              onSuccess={successPaymentHandler}\n                            />\n                          )}\n                        </ListGroup.Item>\n                      )}\n                      {loadingDeliverd ? (\n                        <Loading />\n                      ) : (\n                        userInfo.isAdmin &&\n                        order.isPaid &&\n                        !order.isDelivered && (\n                          <Button\n                            onClick={deliverHandler}\n                            className=\"w-100\"\n                            variant=\"primary\"\n                          >\n                            Mark as deliverd\n                          </Button>\n                        )\n                      )}\n                      {errorDeliverd && (\n                        <Message variant=\"danger\">{errorDeliverd}</Message>\n                      )}\n                    </ListGroup.Item>\n                  </ListGroup.Item>\n                </ListGroup>\n              </Card>\n            </Col>\n          </Row>\n        </>\n      )}\n    </>\n  );\n};\n\nexport default OrderScreen;\n","/Users/hm150601/Documents/GitHub/Shop-Online-Project/frontend/src/screens/ProductListScreen.js",[],[],"/Users/hm150601/Documents/GitHub/Shop-Online-Project/frontend/src/screens/UserEditScreen.js",["245"],[],"import React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useParams, useNavigate } from \"react-router-dom\";\nimport { Form, Button } from \"react-bootstrap\";\nimport FormContainer from \"../components/FormContainer\";\nimport Message from \"../components/Message\";\nimport Loading from \"../components/Loading\";\nimport { getUserDetails, updateUser } from \"../redux/actions/userActions\";\n\nconst UserEditScreen = () => {\n  const dispatch = useDispatch();\n  let params = useParams();\n  let navigate = useNavigate();\n  const userId = params.id;\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [isAdmin, setIsAdmin] = useState(false);\n\n  const userDetails = useSelector((state) => state.userDetails);\n  const { user, loading, error } = userDetails;\n\n  const userUpdate = useSelector((state) => state.userUpdate);\n  const {\n    loading: loadingUpdate,\n    success: successUpdate,\n    error: errorUpdate,\n  } = userUpdate;\n\n  useEffect(() => {\n    if (successUpdate) {\n      navigate(\"/admin/users\");\n    } else {\n      if (!user || user._id !== userId) {\n        dispatch(getUserDetails(userId));\n      } else {\n        setName(user.name);\n        setEmail(user.email);\n        setIsAdmin(user.isAdmin);\n      }\n    }\n  }, [dispatch, userId, user, successUpdate]);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    dispatch(updateUser({ _id: userId, name, email, isAdmin }));\n  };\n\n  return (\n    <FormContainer>\n      <h2>Edit User</h2>\n      {loading ? (\n        <Loading />\n      ) : (\n        <Form onSubmit={handleSubmit}>\n          {error && <Message variant=\"danger\">{error}</Message>}\n          {errorUpdate && <Message variant=\"danger\">{errorUpdate}</Message>}\n          <Form.Group controlId=\"name\" className=\"mt-3\">\n            <Form.Label>Full Name</Form.Label>\n            <Form.Control\n              type=\"text\"\n              placeholder=\"Full Name\"\n              value={name}\n              onChange={(e) => setName(e.target.value)}\n            ></Form.Control>\n          </Form.Group>\n          <Form.Group controlId=\"email\" className=\"mt-3\">\n            <Form.Label>Email</Form.Label>\n            <Form.Control\n              type=\"email\"\n              placeholder=\"Email\"\n              value={email}\n              onChange={(e) => setEmail(e.target.value)}\n            ></Form.Control>\n          </Form.Group>\n          <Form.Group controlId=\"isadmin\">\n            <Form.Check\n              className=\"mt-3\"\n              type=\"radio\"\n              label=\"is Admin\"\n              id=\"isadmin\"\n              name=\"isAdmin\"\n              checked={isAdmin}\n              onChange={(e) => setIsAdmin(!isAdmin)}\n            ></Form.Check>\n          </Form.Group>\n          <Button className=\"mt-3\" type=\"submit\" variant=\"primary\">\n            {loadingUpdate ? <Loading /> : `Update`}\n          </Button>\n        </Form>\n      )}\n    </FormContainer>\n  );\n};\n\nexport default UserEditScreen;\n","/Users/hm150601/Documents/GitHub/Shop-Online-Project/frontend/src/screens/OrderListScreen.js",[],[],"/Users/hm150601/Documents/GitHub/Shop-Online-Project/frontend/src/screens/CreateProductScreen.js",["246"],[],"import React, { useState, useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useNavigate } from \"react-router-dom\";\nimport { Form, Button } from \"react-bootstrap\";\nimport Message from \"../components/Message\";\nimport Loading from \"../components/Loading\";\nimport FormContainer from \"../components/FormContainer\";\nimport { createProduct } from \"../redux/actions/productActions\";\nimport axios from \"axios\";\n\nconst CreateProductScreen = () => {\n  const dispatch = useDispatch();\n  // let navigate = useNavigate();\n  const [name, setName] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [brand, setBrand] = useState(\"\");\n  const [category, setCategory] = useState(\"\");\n  const [price, setPrice] = useState(0);\n  const [countInStock, setCountInStock] = useState(0);\n  const [image, setImage] = useState(\"\");\n  const [uploading, setUploading] = useState(false);\n\n  const { loading, success, error } = useSelector(\n    (state) => state.productCreate\n  );\n\n  // useEffect(() => {\n  //   if (success) {\n  //     navigate(\"/admin/products\");\n  //   }\n  // }, [dispatch, success]);\n\n  useEffect(() => {\n    const navigate = () => {\n    if (success) {\n      navigate(\"/admin/products\");\n    }\n  };\n  navigate();\n  }, [dispatch, success]);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    dispatch(\n      createProduct({\n        name,\n        description,\n        brand,\n        category,\n        price,\n        countInStock,\n        image,\n      })\n    );\n  };\n\n  const uploadFileHandler = async (e) => {\n    const file = e.target.files[0];\n\n    const formData = new FormData();\n\n    formData.append(\"image\", file);\n\n    setUploading(true);\n\n    try {\n      const config = {\n        headers: {\n          \"Content-type\": \"multipart/form-data\",\n        },\n      };\n\n      const { data } = await axios.post(\"/api/upload\", formData, config);\n      setImage(data);\n      setUploading(false);\n    } catch (error) {\n      console.log(error.message);\n      setUploading(false);\n    }\n  };\n\n  return (\n    <FormContainer>\n      <h2>Create Product</h2>\n      <Form onSubmit={handleSubmit}>\n        {error && <Message variant=\"danger\">{error}</Message>}\n        <Form.Group controlId=\"name\" className=\"mt-3\">\n          <Form.Label>Name</Form.Label>\n          <Form.Control\n            type=\"text\"\n            placeholder=\"Name\"\n            value={name}\n            onChange={(e) => setName(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n        <Form.Group controlId=\"email\" className=\"mt-3\">\n          <Form.Label>Description</Form.Label>\n          <Form.Control\n            type=\"text\"\n            placeholder=\"Description\"\n            value={description}\n            onChange={(e) => setDescription(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n        <Form.Group controlId=\"brand\" className=\"mt-3\">\n          <Form.Label>Brand</Form.Label>\n          <Form.Control\n            type=\"text\"\n            placeholder=\"Brand\"\n            value={brand}\n            onChange={(e) => setBrand(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n        <Form.Group controlId=\"category\" className=\"mt-3\">\n          <Form.Label>Category</Form.Label>\n          <Form.Control\n            type=\"text\"\n            placeholder=\"Category\"\n            value={category}\n            onChange={(e) => setCategory(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n        <Form.Group controlId=\"price\" className=\"mt-3\">\n          <Form.Label>Price</Form.Label>\n          <Form.Control\n            type=\"number\"\n            placeholder=\"Price\"\n            value={price}\n            onChange={(e) => setPrice(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n        <Form.Group controlId=\"countInStock\" className=\"mt-3\">\n          <Form.Label>Count In Stock</Form.Label>\n          <Form.Control\n            type=\"number\"\n            placeholder=\"Count In Stock\"\n            value={countInStock}\n            onChange={(e) => setCountInStock(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n        <Form.Group controlId=\"image\" className=\"mt-3\">\n          <Form.Label>Image</Form.Label>\n          <Form.Control\n            type=\"file\"\n            label=\"Choose file\"\n            onChange={uploadFileHandler}\n          ></Form.Control>\n          {uploading && <Loading />}\n        </Form.Group>\n\n        <Button className=\"mt-3\" type=\"submit\" variant=\"primary\">\n          {loading ? <Loading /> : `Add`}\n        </Button>\n      </Form>\n    </FormContainer>\n  );\n};\n\nexport default CreateProductScreen;\n","/Users/hm150601/Documents/GitHub/Shop-Online-Project/frontend/src/screens/EditProductScreen.js",["247"],[],"import React, { useState, useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { Form, Button } from \"react-bootstrap\";\nimport Message from \"../components/Message\";\nimport Loading from \"../components/Loading\";\nimport FormContainer from \"../components/FormContainer\";\nimport {\n  listProductDetails,\n  updateProduct,\n} from \"../redux/actions/productActions\";\nimport axios from \"axios\";\n\nconst EditProductScreen = () => {\n  const dispatch = useDispatch();\n  let navigate = useNavigate();\n  let params = useParams();\n  const productID = params.id;\n  const [name, setName] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [brand, setBrand] = useState(\"\");\n  const [category, setCategory] = useState(\"\");\n  const [price, setPrice] = useState(0);\n  const [countInStock, setCountInStock] = useState(0);\n  const [image, setImage] = useState(\"\");\n  const [uploading, setUploading] = useState(false);\n\n  const { product, loading, error } = useSelector(\n    (state) => state.productDetails\n  );\n\n  const {\n    loading: loadingUpdate,\n    success: successUpdate,\n    error: errorUpdate,\n  } = useSelector((state) => state.productUpdate);\n\n  useEffect(() => {\n    if (successUpdate) {\n      navigate(\"/admin/products\");\n    } else {\n      if (!product || product._id !== productID) {\n        dispatch(listProductDetails(productID));\n      } else {\n        setName(product.name);\n        setDescription(product.description);\n        setBrand(product.brand);\n        setCategory(product.category);\n        setPrice(product.price);\n        setCountInStock(product.countInStock);\n        setImage(product.image);\n      }\n    }\n  }, [dispatch, product, productID, successUpdate]);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    dispatch(\n      updateProduct({\n        _id: productID,\n        name,\n        description,\n        brand,\n        category,\n        price,\n        countInStock,\n        image,\n        numReviews: 0,\n      })\n    );\n  };\n\n  const uploadFileHandler = async (e) => {\n    const file = e.target.files[0];\n\n    const formData = new FormData();\n\n    formData.append(\"image\", file);\n\n    setUploading(true);\n\n    try {\n      const config = {\n        headers: {\n          \"Content-type\": \"multipart/form-data\",\n        },\n      };\n\n      const { data } = await axios.post(\"/api/upload\", formData, config);\n      setImage(data);\n      setUploading(false);\n    } catch (error) {\n      console.log(error.message);\n      setUploading(false);\n    }\n  };\n\n  return (\n    <FormContainer>\n      <h2>Edit Product</h2>\n      {errorUpdate && <Message variant=\"danger\">{errorUpdate}</Message>}\n      {loading ? (\n        <Loading />\n      ) : error ? (\n        <Message variant=\"danger\">{error}</Message>\n      ) : (\n        <Form onSubmit={handleSubmit}>\n          <Form.Group controlId=\"name\" className=\"mt-3\">\n            <Form.Label>Name</Form.Label>\n            <Form.Control\n              type=\"text\"\n              placeholder=\"Name\"\n              value={name}\n              onChange={(e) => setName(e.target.value)}\n            ></Form.Control>\n          </Form.Group>\n          <Form.Group controlId=\"email\" className=\"mt-3\">\n            <Form.Label>Description</Form.Label>\n            <Form.Control\n              type=\"text\"\n              placeholder=\"Description\"\n              value={description}\n              onChange={(e) => setDescription(e.target.value)}\n            ></Form.Control>\n          </Form.Group>\n          <Form.Group controlId=\"brand\" className=\"mt-3\">\n            <Form.Label>Brand</Form.Label>\n            <Form.Control\n              type=\"text\"\n              placeholder=\"Brand\"\n              value={brand}\n              onChange={(e) => setBrand(e.target.value)}\n            ></Form.Control>\n          </Form.Group>\n          <Form.Group controlId=\"category\" className=\"mt-3\">\n            <Form.Label>Category</Form.Label>\n            <Form.Control\n              type=\"text\"\n              placeholder=\"Category\"\n              value={category}\n              onChange={(e) => setCategory(e.target.value)}\n            ></Form.Control>\n          </Form.Group>\n          <Form.Group controlId=\"price\" className=\"mt-3\">\n            <Form.Label>Price</Form.Label>\n            <Form.Control\n              type=\"number\"\n              placeholder=\"Price\"\n              value={price}\n              onChange={(e) => setPrice(e.target.value)}\n            ></Form.Control>\n          </Form.Group>\n          <Form.Group controlId=\"countInStock\" className=\"mt-3\">\n            <Form.Label>Count In Stock</Form.Label>\n            <Form.Control\n              type=\"number\"\n              placeholder=\"Count In Stock\"\n              value={countInStock}\n              onChange={(e) => setCountInStock(e.target.value)}\n            ></Form.Control>\n          </Form.Group>\n          <Form.Group controlId=\"image\" className=\"mt-3\">\n            <Form.Label>Image</Form.Label>\n            <Form.Control\n              type=\"file\"\n              label=\"Choose file\"\n              onChange={uploadFileHandler}\n            ></Form.Control>\n            {uploading && <Loading />}\n          </Form.Group>\n          <Button className=\"mt-3\" type=\"submit\" variant=\"primary\">\n            {loadingUpdate ? <Loading /> : `Edit`}\n          </Button>\n        </Form>\n      )}\n    </FormContainer>\n  );\n};\n\nexport default EditProductScreen;\n","/Users/hm150601/Documents/GitHub/Shop-Online-Project/frontend/src/redux/reducers/productReducers.js",[],[],"/Users/hm150601/Documents/GitHub/Shop-Online-Project/frontend/src/redux/reducers/orderReducers.js",[],[],"/Users/hm150601/Documents/GitHub/Shop-Online-Project/frontend/src/redux/reducers/cartReducers.js",[],[],"/Users/hm150601/Documents/GitHub/Shop-Online-Project/frontend/src/redux/reducers/userReducers.js",[],[],"/Users/hm150601/Documents/GitHub/Shop-Online-Project/frontend/src/products.js",[],[],"/Users/hm150601/Documents/GitHub/Shop-Online-Project/frontend/src/components/ProductCarousel.js",[],[],"/Users/hm150601/Documents/GitHub/Shop-Online-Project/frontend/src/components/Message.js",[],[],"/Users/hm150601/Documents/GitHub/Shop-Online-Project/frontend/src/components/Product.js",[],[],"/Users/hm150601/Documents/GitHub/Shop-Online-Project/frontend/src/components/Meta.js",[],[],"/Users/hm150601/Documents/GitHub/Shop-Online-Project/frontend/src/components/SearchBox.js",[],[],"/Users/hm150601/Documents/GitHub/Shop-Online-Project/frontend/src/components/Rating.js",[],[],"/Users/hm150601/Documents/GitHub/Shop-Online-Project/frontend/src/components/FormContainer.js",[],[],"/Users/hm150601/Documents/GitHub/Shop-Online-Project/frontend/src/components/Paginate.js",[],[],"/Users/hm150601/Documents/GitHub/Shop-Online-Project/frontend/src/components/CheckoutSteps.js",[],[],"/Users/hm150601/Documents/GitHub/Shop-Online-Project/frontend/src/components/Loading.js",[],[],"/Users/hm150601/Documents/GitHub/Shop-Online-Project/frontend/src/redux/actions/cartActions.js",[],[],"/Users/hm150601/Documents/GitHub/Shop-Online-Project/frontend/src/redux/actions/userActions.js",[],[],"/Users/hm150601/Documents/GitHub/Shop-Online-Project/frontend/src/redux/actions/productActions.js",[],[],"/Users/hm150601/Documents/GitHub/Shop-Online-Project/frontend/src/redux/actions/orderActions.js",[],[],"/Users/hm150601/Documents/GitHub/Shop-Online-Project/frontend/src/redux/constants/orderConstants.js",[],[],"/Users/hm150601/Documents/GitHub/Shop-Online-Project/frontend/src/redux/constants/cartConstants.js",[],[],"/Users/hm150601/Documents/GitHub/Shop-Online-Project/frontend/src/redux/constants/productConstants.js",[],[],"/Users/hm150601/Documents/GitHub/Shop-Online-Project/frontend/src/redux/constants/userConstants.js",[],[],{"ruleId":"248","severity":1,"message":"249","line":11,"column":8,"nodeType":"250","messageId":"251","endLine":11,"endColumn":23},{"ruleId":"248","severity":1,"message":"252","line":17,"column":8,"nodeType":"250","messageId":"251","endLine":17,"endColumn":16},{"ruleId":"253","severity":1,"message":"254","line":52,"column":6,"nodeType":"255","endLine":52,"endColumn":49,"suggestions":"256"},{"ruleId":"253","severity":1,"message":"257","line":27,"column":6,"nodeType":"255","endLine":27,"endColumn":36,"suggestions":"258"},{"ruleId":"248","severity":1,"message":"259","line":18,"column":7,"nodeType":"250","messageId":"251","endLine":18,"endColumn":15},{"ruleId":"253","severity":1,"message":"260","line":70,"column":6,"nodeType":"255","endLine":70,"endColumn":56,"suggestions":"261"},{"ruleId":"253","severity":1,"message":"262","line":41,"column":6,"nodeType":"255","endLine":41,"endColumn":45,"suggestions":"263"},{"ruleId":"248","severity":1,"message":"264","line":3,"column":10,"nodeType":"250","messageId":"251","endLine":3,"endColumn":21},{"ruleId":"253","severity":1,"message":"262","line":54,"column":6,"nodeType":"255","endLine":54,"endColumn":51,"suggestions":"265"},"no-unused-vars","'ProductCarousel' is defined but never used.","Identifier","unusedVar","'products' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'error' and 'navigate'. Either include them or remove the dependency array.","ArrayExpression",["266"],"React Hook useEffect has a missing dependency: 'redirect'. Either include it or remove the dependency array.",["267"],"'navigate' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'order'. Either include it or remove the dependency array.",["268"],"React Hook useEffect has a missing dependency: 'navigate'. Either include it or remove the dependency array.",["269"],"'useNavigate' is defined but never used.",["270"],{"desc":"271","fix":"272"},{"desc":"273","fix":"274"},{"desc":"275","fix":"276"},{"desc":"277","fix":"278"},{"desc":"279","fix":"280"},"Update the dependencies array to be: [dispatch, error, navigate, params.id, successProductReview]",{"range":"281","text":"282"},"Update the dependencies array to be: [dispatch, navigate, redirect, userInfo]",{"range":"283","text":"284"},"Update the dependencies array to be: [dispatch, successPay, params.id, successDeliverd, order]",{"range":"285","text":"286"},"Update the dependencies array to be: [dispatch, userId, user, successUpdate, navigate]",{"range":"287","text":"288"},"Update the dependencies array to be: [dispatch, navigate, product, productID, successUpdate]",{"range":"289","text":"290"},[1541,1584],"[dispatch, error, navigate, params.id, successProductReview]",[960,990],"[dispatch, navigate, redirect, userInfo]",[2128,2178],"[dispatch, successPay, params.id, successDeliverd, order]",[1309,1348],"[dispatch, userId, user, successUpdate, navigate]",[1738,1783],"[dispatch, navigate, product, productID, successUpdate]"]