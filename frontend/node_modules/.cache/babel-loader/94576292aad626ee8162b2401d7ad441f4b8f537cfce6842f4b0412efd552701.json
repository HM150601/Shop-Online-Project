{"ast":null,"code":"import * as actions from \"../constants/orderConstants\";\nimport axios from \"axios\";\nimport { logout } from \"./userActions\";\nexport const createOrder = dataOrder => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: actions.ORDER_CREATE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.post(\"/api/orders\", dataOrder, config);\n    dispatch({\n      type: actions.ORDER_CREATE_SUCCESS,\n      payload: data.order\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    if (message === \"not authorized, no token\") {\n      dispatch(logout());\n    }\n    dispatch({\n      type: actions.ORDER_CREATE_FAILED,\n      payload: message\n    });\n  }\n};\nexport const getOrderDetails = id => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: actions.ORDER_DETAILS_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.get(`/api/orders/${id}`, config);\n    dispatch({\n      type: actions.ORDER_DETAILS_SUCCESS,\n      payload: data.order\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    if (message === \"not authorized, no token\") {\n      dispatch(logout());\n    }\n    dispatch({\n      type: actions.ORDER_DETAILS_FAILED,\n      payload: message\n    });\n  }\n};\nexport const payOrder = (orderId, paymentResult) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: actions.ORDER_PAY_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.put(`/api/orders/${orderId}/pay`, paymentResult, config);\n    dispatch({\n      type: actions.ORDER_PAY_SUCCESS,\n      payload: data.order\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    if (message === \"not authorized, no token\") {\n      dispatch(logout());\n    }\n    dispatch({\n      type: actions.ORDER_PAY_FAILED,\n      payload: message\n    });\n  }\n};\nexport const deliverOrder = orderId => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: actions.ORDER_DELIVER_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    await axios.put(`/api/orders/${orderId}/deliver`, {}, config);\n    dispatch({\n      type: actions.ORDER_DELIVER_SUCCESS\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    if (message === \"not authorized, no token\") {\n      dispatch(logout());\n    }\n    dispatch({\n      type: actions.ORDER_DELIVER_FAILED,\n      payload: message\n    });\n  }\n};\nexport const listMyOrders = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: actions.ORDER_LIST_MY_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.get(`/api/orders/myorders`, config);\n    dispatch({\n      type: actions.ORDER_LIST_MY_SUCCESS,\n      payload: data.orders\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    if (message === \"not authorized, no token\") {\n      dispatch(logout());\n    }\n    dispatch({\n      type: actions.ORDER_LIST_MY_FAILED,\n      payload: message\n    });\n  }\n};\nexport const listOrders = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: actions.ORDER_LIST_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.get(`/api/orders/`, config);\n    dispatch({\n      type: actions.ORDER_LIST_SUCCESS,\n      payload: data.orders\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    if (message === \"not authorized, no token\") {\n      dispatch(logout());\n    }\n    dispatch({\n      type: actions.ORDER_LIST_FAILED,\n      payload: message\n    });\n  }\n};","map":{"version":3,"names":["actions","axios","logout","createOrder","dataOrder","dispatch","getState","type","ORDER_CREATE_REQUEST","userLogin","userInfo","config","headers","Authorization","token","data","post","ORDER_CREATE_SUCCESS","payload","order","error","message","response","ORDER_CREATE_FAILED","getOrderDetails","id","ORDER_DETAILS_REQUEST","get","ORDER_DETAILS_SUCCESS","ORDER_DETAILS_FAILED","payOrder","orderId","paymentResult","ORDER_PAY_REQUEST","put","ORDER_PAY_SUCCESS","ORDER_PAY_FAILED","deliverOrder","ORDER_DELIVER_REQUEST","ORDER_DELIVER_SUCCESS","ORDER_DELIVER_FAILED","listMyOrders","ORDER_LIST_MY_REQUEST","ORDER_LIST_MY_SUCCESS","orders","ORDER_LIST_MY_FAILED","listOrders","ORDER_LIST_REQUEST","ORDER_LIST_SUCCESS","ORDER_LIST_FAILED"],"sources":["/Users/hm150601/Documents/GitHub/Shop-Online-Project/frontend/src/redux/actions/orderActions.js"],"sourcesContent":["import * as actions from \"../constants/orderConstants\";\nimport axios from \"axios\";\nimport { logout } from \"./userActions\";\n\nexport const createOrder = (dataOrder) => async (dispatch, getState) => {\n  try {\n    dispatch({ type: actions.ORDER_CREATE_REQUEST });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    const { data } = await axios.post(\"/api/orders\", dataOrder, config);\n\n    dispatch({ type: actions.ORDER_CREATE_SUCCESS, payload: data.order });\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message;\n    if (message === \"not authorized, no token\") {\n      dispatch(logout());\n    }\n    dispatch({\n      type: actions.ORDER_CREATE_FAILED,\n      payload: message,\n    });\n  }\n};\n\nexport const getOrderDetails = (id) => async (dispatch, getState) => {\n  try {\n    dispatch({ type: actions.ORDER_DETAILS_REQUEST });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    const { data } = await axios.get(`/api/orders/${id}`, config);\n\n    dispatch({ type: actions.ORDER_DETAILS_SUCCESS, payload: data.order });\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message;\n    if (message === \"not authorized, no token\") {\n      dispatch(logout());\n    }\n    dispatch({\n      type: actions.ORDER_DETAILS_FAILED,\n      payload: message,\n    });\n  }\n};\n\nexport const payOrder =\n  (orderId, paymentResult) => async (dispatch, getState) => {\n    try {\n      dispatch({ type: actions.ORDER_PAY_REQUEST });\n\n      const {\n        userLogin: { userInfo },\n      } = getState();\n\n      const config = {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${userInfo.token}`,\n        },\n      };\n\n      const { data } = await axios.put(\n        `/api/orders/${orderId}/pay`,\n        paymentResult,\n        config\n      );\n\n      dispatch({ type: actions.ORDER_PAY_SUCCESS, payload: data.order });\n    } catch (error) {\n      const message =\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message;\n      if (message === \"not authorized, no token\") {\n        dispatch(logout());\n      }\n      dispatch({\n        type: actions.ORDER_PAY_FAILED,\n        payload: message,\n      });\n    }\n  };\n\nexport const deliverOrder = (orderId) => async (dispatch, getState) => {\n  try {\n    dispatch({ type: actions.ORDER_DELIVER_REQUEST });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    await axios.put(`/api/orders/${orderId}/deliver`, {}, config);\n\n    dispatch({ type: actions.ORDER_DELIVER_SUCCESS });\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message;\n    if (message === \"not authorized, no token\") {\n      dispatch(logout());\n    }\n    dispatch({\n      type: actions.ORDER_DELIVER_FAILED,\n      payload: message,\n    });\n  }\n};\n\nexport const listMyOrders = () => async (dispatch, getState) => {\n  try {\n    dispatch({ type: actions.ORDER_LIST_MY_REQUEST });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    const { data } = await axios.get(`/api/orders/myorders`, config);\n\n    dispatch({ type: actions.ORDER_LIST_MY_SUCCESS, payload: data.orders });\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message;\n    if (message === \"not authorized, no token\") {\n      dispatch(logout());\n    }\n    dispatch({\n      type: actions.ORDER_LIST_MY_FAILED,\n      payload: message,\n    });\n  }\n};\n\nexport const listOrders = () => async (dispatch, getState) => {\n  try {\n    dispatch({ type: actions.ORDER_LIST_REQUEST });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    const { data } = await axios.get(`/api/orders/`, config);\n    dispatch({ type: actions.ORDER_LIST_SUCCESS, payload: data.orders });\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message;\n    if (message === \"not authorized, no token\") {\n      dispatch(logout());\n    }\n    dispatch({\n      type: actions.ORDER_LIST_FAILED,\n      payload: message,\n    });\n  }\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}